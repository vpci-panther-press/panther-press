---
const { heading } = Astro.props

type Heading = {
	depth: number
	text: string
	slug: string
	subheadings: Heading[]
}

export interface Props {
	heading: Heading
}
---

<li class='flex flex-col'>
	<a
		href={'#' + heading.slug}
		class='toc-heading bg-zinc-200 dark:bg-zinc-800 p-2 rounded-lg mb-2 w-full block overflow-hidden transition-all duration-300 ease-in-out'
	>
		<span class='truncate-text first-letter:uppercase dark:text-zinc-200'>
			{heading.text}
		</span>
	</a>

	<!-- {
		heading.subheadings.length > 0 && (
			<ul class='ml-3'>
				{heading.subheadings.map((subheading) => (
					<Astro.self heading={subheading} />
				))}
			</ul>
		)
	} -->
</li>

<style>
	.toc-heading {
		--max-height: 3.75em;
		max-height: var(--max-height);
		position: relative;
	}

	.toc-heading:hover {
		--max-height: 100vh;
		background-color: theme('colors.zinc.300');
	}

	.truncate-text {
		overflow: hidden;
		max-height: 3em; /* Adjust based on your line height */
		position: relative;
		text-overflow: ellipsis;
	}

	.truncate-text::after {
		content: '';
		position: absolute;
		right: 0;
		bottom: 0;
		background: inherit;
		padding-left: 0.25em;
	}

	.toc-heading:hover .truncate-text {
		max-height: none;
		overflow: visible;
	}

	:global(.dark) .toc-heading:hover {
		background-color: theme('colors.zinc.700');
	}

	.toc-heading::after {
		content: '';
		display: block;
		height: 1em;
		width: 100%;
		position: absolute;
		bottom: 0;
		left: 0;
		transition: opacity 0.3s ease-in-out;
	}

	.toc-heading:hover::after {
		opacity: 0;
	}

	:global(.dark) .toc-heading::after {
		background: linear-gradient(to bottom, transparent, theme('colors.zinc.800'));
	}
</style>
