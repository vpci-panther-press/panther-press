---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/ListPosts'
import ListCategories from '@/components/ListCategories'
import PageTitle from '@/components/PageTitle'
import { sluglify, unsluglify, getPosts } from '@/utils'
import { CATEGORIES } from '@/data/categories'
import { siteConfig } from '@/data/site.config'
import Pagination from '@/components/Pagination'

export async function getStaticPaths({ paginate }: any) {
	const allPosts = await getPosts()

	return CATEGORIES.flatMap((category: string) => {
		const unsluglifyNameCategory = unsluglify(category!.toLowerCase())
		const filteredPosts = allPosts.filter(
			(post) => post.data.category.toLowerCase() === unsluglifyNameCategory
		)

		return paginate(filteredPosts, {
			params: {
				category: sluglify(category.toLowerCase())
			},
			pageSize: siteConfig.paginationSize
		})
	})
}
const params = Astro.params
const { page } = Astro.props

const unsluglifyNameCategory = unsluglify(params.category!.toLowerCase())
const posts = page.data
---

<BaseLayout title={params.category}>
	<PageTitle title={unsluglifyNameCategory} />
	<ListCategories activeCategory={params.category} />
	<div>
		<div class='flex flex-row justify-between'>
			<h1 class='text-lg font-medium text-start'>
				Page {(page as { currentPage: number }).currentPage}
			</h1>
			<h1 class='text-lg font-medium tracking-wide text-end capitalize'>
				{unsluglifyNameCategory}
			</h1>
		</div>
		<ListPosts FirstBig={true} posts={posts} />
	</div>
	<Pagination page={page} />
</BaseLayout>
